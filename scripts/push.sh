function prepushHook() {
	
	if [ -f "prepush_hooks.sh" ]; then
		echo "Executing pre push hooks..."
		while read SCRIPTLINE
		do
		    eval "$SCRIPTLINE"
			if [ $? -eq 0 ]; then
				echo -e "\033[32m>> $SCRIPTLINE ran successfully." 
			else
				echo -e "\033[31m>> $SCRIPTLINE failed."
				return 0
			fi
		done < prepush_hooks.sh
		
		eval "$1='1'" 
	else
		echo "No prepush_hooks.sh found."
		echo "Do you want to push anyway (y / n)?"
    	read yn
		if [ "$yn" = "y" ]; then
			eval "$1='1'" 
		else
			eval "$1='0'" 
		fi
	fi
}

function pushitgood() {

	echo -e '\033[33m
	$$$$$$$\  $$\   $$\  $$$$$$\  $$\   $$\       $$$$$$\ $$$$$$$$\        $$$$$$\   $$$$$$\   $$$$$$\  $$$$$$$\  $$\ 
	$$  __$$\ $$ |  $$ |$$  __$$\ $$ |  $$ |      \_$$  _|\__$$  __|      $$  __$$\ $$  __$$\ $$  __$$\ $$  __$$\ $$ |
	$$ |  $$ |$$ |  $$ |$$ /  \__|$$ |  $$ |        $$ |     $$ |         $$ /  \__|$$ /  $$ |$$ /  $$ |$$ |  $$ |$$ |
	$$$$$$$  |$$ |  $$ |\$$$$$$\  $$$$$$$$ |        $$ |     $$ |         $$ |$$$$\ $$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |
	$$  ____/ $$ |  $$ | \____$$\ $$  __$$ |        $$ |     $$ |         $$ |\_$$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |\__|
	$$ |      $$ |  $$ |$$\   $$ |$$ |  $$ |        $$ |     $$ |         $$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |    
	$$ |      \$$$$$$  |\$$$$$$  |$$ |  $$ |      $$$$$$\    $$ |         \$$$$$$  | $$$$$$  | $$$$$$  |$$$$$$$  |$$\ 
	\__|       \______/  \______/ \__|  \__|      \______|   \__|          \______/  \______/  \______/ \_______/ \__|                                                                                                                                         
   	\e[0m
	'

	git remote update 

	echo "Comparing local to remote revision..."
	LOCAL=$(git rev-parse @)
	REMOTE=$(git rev-parse @{u})
	BASE=$(git merge-base @ @{u})

	if [ $LOCAL = $REMOTE ]; then
	    echo -e "\033[31mNothing to push."
	elif [ $LOCAL = $BASE ]; then
	    echo -e "\033[31mRemote is ahead, please pull first."
	elif [ $REMOTE = $BASE ]; then
		retval=''
		prepushHook retval
		if [ "1" != "$retval" ]; then
			
			echo -e '\033[31m
			$$$$$$$$\  $$$$$$\  $$$$$$\ $$\       $$$$$$$$\ $$$$$$$\  
			$$  _____|$$  __$$\ \_$$  _|$$ |      $$  _____|$$  __$$\ 
			$$ |      $$ /  $$ |  $$ |  $$ |      $$ |      $$ |  $$ |
		 	$$$$$\    $$$$$$$$ |  $$ |  $$ |      $$$$$\    $$ |  $$ |
			$$  __|   $$  __$$ |  $$ |  $$ |      $$  __|   $$ |  $$ |
			$$ |      $$ |  $$ |  $$ |  $$ |      $$ |      $$ |  $$ |
			$$ |      $$ |  $$ |$$$$$$\ $$$$$$$$\ $$$$$$$$\ $$$$$$$  |
			\__|      \__|  \__|\______|\________|\________|\_______/                                                           
		 	\e[0m
			'
		else 
			
			echo -e '\033[32m
		    $$$$$$\  $$\   $$\  $$$$$$\   $$$$$$\  $$$$$$$$\  $$$$$$\   $$$$$$\  
		   $$  __$$\ $$ |  $$ |$$  __$$\ $$  __$$\ $$  _____|$$  __$$\ $$  __$$\ 
		   $$ /  \__|$$ |  $$ |$$ /  \__|$$ /  \__|$$ |      $$ /  \__|$$ /  \__|
		   \$$$$$$\  $$ |  $$ |$$ |      $$ |      $$$$$\    \$$$$$$\  \$$$$$$\  
		    \____$$\ $$ |  $$ |$$ |      $$ |      $$  __|    \____$$\  \____$$\ 
		   $$\   $$ |$$ |  $$ |$$ |  $$\ $$ |  $$\ $$ |      $$\   $$ |$$\   $$ |
		   \$$$$$$  |\$$$$$$  |\$$$$$$  |\$$$$$$  |$$$$$$$$\ \$$$$$$  |\$$$$$$  |
		    \______/  \______/  \______/  \______/ \________| \______/  \______/ 
            \e[0m
			'                                                         
                                                        
			#git push
		fi 	 
	else
	    echo -e "\033[31m Diverged."
	fi
}

